domino:
  server:
    context-path: /
    host: 127.0.0.1
    port: 1111
  datasource:
    sqlite-datafile-path: ":memory:"
    enable-auto-import: true
  logging:
    min-level: debug
    enable-json-logging: false
  auth:
    auth-mode: direct
    expiration: "4 hours"
    jwt-private-key: private-key-1
    username: user-1
    password: pass-1
    oauth-issuer: http://localhost:9999/
    oauth-audience: aud:domino:test
  agent:
    operation-timeout: 90 sec
    api-key: $2b$12$xo1HO6dr67ZrnxvqaADVo.eww0KxqkYIQdInxF.3VTprSOqLQoX7S
    known-agents:
      - host-id: localhost
        type: DOCKER
        agent-key: 2ce1fba7-aedb-42b5-9033-f9fdd067bba5
      - host-id: remote
        type: FILESYSTEM
        agent-key: 05a66ac8-adeb-4d96-a108-f78ed80723a8
  info:
    app-name: Domino Platform Coordinator TEST
    abbreviation: DPC-TEST
  deployments:
    docker-no-args:
      source:
        type: DOCKER
        home: localhost:9999/apps1
        resource: docker-app-no-args
      target:
        hosts:
          - localhost
      execution:
        command-name: app_docker_no_args
        via: STANDARD
        args: {}
      health-check:
        enabled: false
      info:
        enabled: false
    docker-all-args:
      source:
        type: DOCKER
        home: localhost:9999/apps2
        resource: docker-app-all-args
      target:
        hosts:
          - localhost
      execution:
        command-name: app_docker_all_args
        via: STANDARD
        args:
          ports:
            9998: "7998"
          network-mode: host
          environment:
            APP_ARGS: --spring.profiles.active=test --spring.config.location=/opt/app.yml
            ENV: test
          command-args:
            - arg1
            - arg2
          volumes:
            "/apps/data": "/data:rw"
            "/etc/timezone": "/etc/timezone:ro"
            "/etc/localtime": "/etc/localtime:ro"
          restart-policy: unless-stopped
      health-check:
        enabled: true
        delay: 20 seconds
        timeout: 2 seconds
        max-attempts: 3
        endpoint: http://127.0.0.1:9998/health
      info:
        enabled: true
        endpoint: http://127.0.0.1:9998/info
        field-mapping:
          abbreviation: $.app.abbreviation
          version: $.build.version
    docker-custom:
      source:
        type: DOCKER
        home: localhost:9999/apps3
        resource: docker-app-custom
      target:
        hosts:
          - localhost
      execution:
        command-name: app_docker_custom
        via: STANDARD
        args:
          custom:
            Image: app1
      health-check:
        enabled: false
      info:
        enabled: false
    fs-service:
      source:
        type: FILESYSTEM
        home: http://localhost/release/leaflet-backend1-{version}.jar
        resource: leaflet-backend1.jar
      target:
        hosts:
          - localhost
      execution:
        via: SERVICE
        command-name: leaflet-backend1
      health-check:
        enabled: true
        delay: 10 seconds
        timeout: 1 seconds
        max-attempts: 4
        endpoint: http://127.0.0.1:9998/health
      info:
        enabled: true
        endpoint: http://127.0.0.1:9998/info
        field-mapping:
          abbreviation: $.app.abbreviation
          version: $.build.version
    fs-executable:
      source:
        type: FILESYSTEM
        home: http://localhost/release/leaflet-backend2-{version}.jar
        resource: leaflet-backend2.jar
      target:
        hosts:
          - localhost
      execution:
        via: EXECUTABLE
        as-user: appuser
        command-name: leaflet-backend2
        args:
          - arg1
          - arg2
      health-check:
        enabled: false
      info:
        enabled: false
    fs-runtime:
      source:
        type: FILESYSTEM
        home: http://localhost/release/leaflet-backend3-{version}.jar
        resource: leaflet-backend3.jar
      target:
        hosts:
          - localhost
      execution:
        via: RUNTIME
        as-user: appuser
        command-name: leaflet-backend3
        runtime: java
      health-check:
        enabled: false
      info:
        enabled: false
